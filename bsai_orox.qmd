---
title: "BSAI other rockfish"
#format: html
editor: visual
format:
  html: 
    page-layout: full
    fig-format: svg
    fig-dpi: 400
    fig-width: 80
    fig-height: 50
---

## *Background*

*The Groundfish Assessment Program is migrating to new database tables (housed in the `GAP_PRODUCTS` schema) starting in the 2024 groudfish stock assessment cycle. Here we compare bottom trawl survey (BTS) biomass and length frequencies for the AI BTS, EBS shelf BTS, and EBS slope BTS using existing queries and updated queries. We compare differences by species and aggregated to the stock complex.*

## *Setup*

```{r}
#| output: false

libs <- c("tidyverse", "odbc", "keyring", "dbplyr", "kableExtra")
if(length(libs[which(libs %in% rownames(installed.packages()) == FALSE )]) > 0) {
  install.packages(libs[which(libs %in% rownames(installed.packages()) == FALSE)])}
lapply(libs, library, character.only = TRUE)

theme_set(theme_bw(base_size = 15) + 
            theme(panel.border = element_blank(), 
                  panel.grid.major = element_blank(),
                  panel.grid.minor = element_blank(), 
                  axis.line = element_line(colour = "black")))

akfin <- DBI::dbConnect(odbc::odbc(), "akfin", uid = keyring::key_list("akfin")$username, pwd = keyring::key_get("akfin", keyring::key_list("akfin")$username))

```

## *Species codes*

*This is the RACE `species_codes` list used for the BSAI orox assessment:*

```{r}
#| output: false
bsai_orox_codes_df <- read_csv('data/bsai_orox_spp_lookup.csv')
my_spp_codes <- bsai_orox_codes_df %>% pull(species_code)
```

```{r}
#| echo: false
bsai_orox_codes_df %>% 
  kableExtra::kable("html") %>% 
    kableExtra::kable_styling() %>% 
    kableExtra::scroll_box(width = "100%", height = "200px")
```

## *New area IDs*

*Instead of hosting various survey data in different database tables, the new `GAP_PRODUCTS` uses `SURVEY_DEFINITION_ID` and `TYPE` to identify the survey and the structure or aggregation of data desired by the user. For example, in the BSAI other rockfish assessment, we pull biomass data at the subarea level for the AI BTS. This differs from the EBS shelf and slope surveys which are pulled at the regional level.*

```{r}
lkup <- dplyr::tbl(akfin, dplyr::sql('gap_products.akfin_area')) %>% 
  dplyr::left_join(dplyr::tbl(akfin, dplyr::sql('gap_products.akfin_survey_design')) %>% 
                     dplyr::distinct(SURVEY, SURVEY_DEFINITION_ID),
                   by = join_by(SURVEY_DEFINITION_ID)) %>% 
  dplyr::rename_all(tolower) %>% 
  dplyr::filter(survey %in% c('AI', 'EBS', 'EBS_SLOPE')) %>% 
  dplyr::collect()

lkup %>% 
  distinct(survey, type) %>% 
  arrange(survey, type) %>% 
  kableExtra::kable("html") %>% 
    kableExtra::kable_styling() %>% 
    kableExtra::scroll_box(width = "100%", height = "200px")
```

*AI BTS:*

```{r}
ai_area_ids <- lkup %>% filter(survey == 'AI' & type == "SUBAREA") 
ai_area_ids %>% 
  distinct(survey_definition_id, area_id, type, area_name) %>% 
  kableExtra::kable("html") %>% 
    kableExtra::kable_styling() %>% 
    kableExtra::scroll_box(width = "100%", height = "200px")
ai_area_ids <- ai_area_ids %>% pull(area_id)
```

*AI BTS for lengths*
```{r}
ailen_area_ids <- lkup %>% filter(survey == 'AI' & type == "SUBAREA BY DEPTH") 
ailen_area_ids %>% 
  distinct(survey_definition_id, area_id, type, area_name, depth_min_m, depth_max_m) %>% 
  kableExtra::kable("html") %>% 
    kableExtra::kable_styling() %>% 
    kableExtra::scroll_box(width = "100%", height = "200px")
ailen_area_ids <- ailen_area_ids %>% pull(area_id)
```

*EBS shelf BTS:*

```{r}
lkup %>% filter(survey == 'EBS' & type == 'REGION' ) %>% 
  distinct(type, area_id, description) %>% 
  kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
# We have not traditionally included the NW Region
ebs_shelf_ids <- lkup %>% filter(survey == 'EBS' & type == 'REGION' & description == 'EBS Standard Region: All Strata') %>% pull(area_id)
```

*EBS slope BTS:*

```{r}
ebs_slope_ids <- lkup %>% filter(survey == 'EBS_SLOPE' & type == 'REGION')
ebs_slope_ids %>% 
  distinct(survey_definition_id, area_id, type, area_name) %>% 
    kableExtra::kable("html") %>% 
    kableExtra::kable_styling() %>% 
    kableExtra::scroll_box(width = "100%", height = "200px")
  ebs_slope_ids <- ebs_slope_ids %>% pull(area_id)
```

## *Compare AI BTS biomass*

### *Original query:*

```{r}
oldai <- dplyr::tbl(akfin, dplyr::sql('afsc.race_biomassinpfcaigoa')) %>% 
  dplyr::rename_all(tolower) %>% 
  dplyr::select(survey, area_id = summary_area, species_code, year, biomass_mt = area_biomass, biomass_var) %>% 
  dplyr::filter(survey == "AI" & species_code %in% my_spp_codes & year >= 1991) %>% 
  dplyr::left_join(dplyr::tbl(akfin, dplyr::sql('afsc.race_goastrataaigoa')) %>% 
                     dplyr::rename_all(tolower) %>% 
                     dplyr::filter(survey == "AI") %>% 
                     dplyr::distinct(survey, area_id = summary_area, area_name = inpfc_area)) %>%  
                   dplyr::collect()
```

```{r}
#| echo: false
oldai %>% kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *New query:*

```{r}
newai <- dplyr::tbl(akfin, dplyr::sql('gap_products.akfin_biomass')) %>% 
  dplyr::rename_all(tolower) %>% 
  dplyr::select(survey_definition_id, area_id, species_code, year, biomass_mt, biomass_var) %>% 
  dplyr::filter(species_code %in% my_spp_codes & area_id %in% ai_area_ids & year >= 1991) %>% 
  dplyr::collect() %>% 
  dplyr::left_join(lkup %>% select(survey_definition_id, area_id, area_name))
```

```{r}
#| echo: false
newai %>% kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *Combine data sets by species and with all species combined:*

```{r}

compareai <- newai %>% 
  mutate(schema = "akfin.gap_products") %>% 
  select(schema, year, area_name, area_id, species_code, biomass_mt, biomass_var) %>% 
  bind_rows(oldai %>% 
              mutate(schema = "akfin.afsc") %>% 
              select(schema, year, area_name, area_id, species_code, biomass_mt, biomass_var)) %>% 
  mutate(cv = ifelse(biomass_mt > 0, sqrt(biomass_var) / biomass_mt, NA))

compareai_combined <- compareai %>% 
  group_by(schema, year, area_name, area_id) %>% 
  summarise(biomass_mt = sum(biomass_mt, na.rm = TRUE),
            biomass_var = sum(biomass_var, na.rm = TRUE)) %>% 
  ungroup() %>% 
  mutate(cv = ifelse(biomass_mt > 0, sqrt(biomass_var) / biomass_mt, NA))
```

### *Species-specific comparisons:*

AI BTS Biomass (+/- 1 SD), red = old data, blue = new data:

```{r,fig.width=13,fig.height=11}
#| echo: false
ggplot(compareai, aes(x = factor(year), y = biomass_mt, fill = schema)) +
  geom_bar(stat = 'identity', position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  geom_errorbar(aes(ymin = biomass_mt - sqrt(biomass_var), ymax = biomass_mt + sqrt(biomass_var)),
                position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  facet_grid(species_code~area_name, scale = 'free_y') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x = NULL)

```

```{r}
#| echo: false
output <- compareai %>% 
  pivot_wider(id_cols = c(year, area_name, species_code), names_from = schema, values_from = biomass_mt, values_fill = 0) %>% 
  mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
         difference = akfin.gap_products-akfin.afsc,
         variable = 'mean') %>% 
  bind_rows(compareai %>% 
              pivot_wider(id_cols = c(year, area_name, species_code), names_from = schema, values_from = cv, values_fill = 0) %>% 
              mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
                     difference = akfin.gap_products-akfin.afsc,
                     variable = 'cv')) %>% 
  arrange(desc(variable), desc(abs(difference))) %>%   left_join(bsai_orox_codes_df %>% select(species_code, common_name)) 
```

Comparison of biomass point estimates, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'mean') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

Comparison of biomass CVs, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'cv') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *Complex-level comparisons:*

AI BTS Biomass (+/- 1 SD), red = old data, blue = new data:

```{r,fig.width=10,fig.height=10}
#| echo: false
ggplot(compareai_combined, aes(x = factor(year), y = biomass_mt, fill = schema)) +
  geom_bar(stat = 'identity', position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  geom_errorbar(aes(ymin = biomass_mt - sqrt(biomass_var), ymax = biomass_mt + sqrt(biomass_var)),
                position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  facet_wrap(~area_name, scale = 'free_y') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x = NULL)

```

```{r}
#| echo: false
output <- compareai_combined %>% 
  pivot_wider(id_cols = c(year, area_name), names_from = schema, values_from = biomass_mt, values_fill = 0) %>% 
  mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
         difference = akfin.gap_products-akfin.afsc,
         variable = 'mean') %>% 
  bind_rows(compareai_combined %>% 
              pivot_wider(id_cols = c(year, area_name), names_from = schema, values_from = cv, values_fill = 0) %>% 
              mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
                     difference = akfin.gap_products-akfin.afsc,
                     variable = 'cv')) %>% 
  arrange(desc(variable), desc(abs(difference)))
```

Comparison of biomass point estimates, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'mean') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

Comparison of biomass CVs, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'cv') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

## Compare EBS Shelf BTS biomass

### *Original query:*

```{r}
oldebs <- dplyr::tbl(akfin, dplyr::sql('afsc.race_biomass_ebsshelf_standard')) %>% 
  dplyr::rename_all(tolower) %>% 
  dplyr::filter(species_code %in% my_spp_codes & year >= 1982 & stratum == 999) %>% 
  dplyr::select(survey, species_code, year, biomass_mt = biomass, biomass_var = varbio) %>% 
  dplyr::collect()
```

```{r}
#| echo: false
oldebs %>% kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *New query:*
```{r}
newebs <- dplyr::tbl(akfin, dplyr::sql('gap_products.akfin_biomass')) %>% 
  dplyr::rename_all(tolower) %>% 
  dplyr::select(survey_definition_id, area_id, species_code, year, biomass_mt, biomass_var) %>% 
  dplyr::filter(species_code %in% my_spp_codes & area_id %in% ebs_shelf_ids & year >= 1982) %>% 
  dplyr::collect() %>% 
  dplyr::left_join(lkup %>% select(survey_definition_id, area_id, area_name, description))
```


```{r}
#| echo: false
newebs %>% kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *Combine data sets by species and with all species combined:*

```{r}
compareebs <- newebs %>% 
  mutate(schema = "akfin.gap_products") %>% 
  select(schema, year, species_code, biomass_mt, biomass_var) %>% 
  bind_rows(oldebs %>% 
              mutate(schema = "akfin.afsc",
                     species_code = as.numeric(species_code)) %>% 
              select(schema, year, species_code, biomass_mt, biomass_var)) %>% 
  mutate(cv = ifelse(biomass_mt > 0, sqrt(biomass_var) / biomass_mt, NA),
         area_name = unique(newebs$description))

compareebs_combined <- compareebs %>% 
  group_by(area_name, schema, year) %>% 
 summarise(biomass_mt = sum(biomass_mt, na.rm = TRUE),
            biomass_var = sum(biomass_var, na.rm = TRUE)) %>% 
  ungroup() %>% 
  mutate(cv = ifelse(biomass_mt > 0, sqrt(biomass_var) / biomass_mt, NA))

```
### *Species-specific comparisons:*

EBS Shelf BTS Biomass (+/- 1 SD), red = old data, blue = new data:

```{r,fig.width=16,fig.height=7}
#| echo: false
ggplot(compareebs, aes(x = factor(year), y = biomass_mt, fill = schema)) +
  geom_bar(stat = 'identity', position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  geom_errorbar(aes(ymin = biomass_mt - sqrt(biomass_var), ymax = biomass_mt + sqrt(biomass_var)),
                position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  facet_wrap(~species_code, ncol = 2, scale = 'free_y') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x = NULL)

```

```{r}
#| echo: false
output <- compareebs %>% 
  pivot_wider(id_cols = c(area_name, year, species_code), names_from = schema, values_from = biomass_mt, values_fill = 0) %>% 
  mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
         difference = akfin.gap_products-akfin.afsc,
         variable = 'mean') %>% 
  bind_rows(compareebs %>% 
              pivot_wider(id_cols = c(area_name, year, species_code), names_from = schema, values_from = cv, values_fill = 0) %>% 
              mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
                     difference = akfin.gap_products-akfin.afsc,
                     variable = 'cv')) %>% 
  arrange(desc(variable), desc(abs(difference))) %>%   left_join(bsai_orox_codes_df %>% select(species_code, common_name)) 
```
Comparison of biomass point estimates, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'mean') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

Comparison of biomass CVs, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'cv') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *Complex-level comparisons:*

EBS Shelf BTS Biomass (+/- 1 SD), red = old data, blue = new data:

```{r,fig.width=14,fig.height=5}
#| echo: false
ggplot(compareebs_combined, aes(x = factor(year), y = biomass_mt, fill = schema)) +
  geom_bar(stat = 'identity', position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  geom_errorbar(aes(ymin = biomass_mt - sqrt(biomass_var), ymax = biomass_mt + sqrt(biomass_var)),
                position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x = NULL)
```

```{r}
#| echo: false
output <- compareebs_combined %>% 
  pivot_wider(id_cols = c(area_name, year), names_from = schema, values_from = biomass_mt, values_fill = 0) %>% 
  mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
         difference = akfin.gap_products-akfin.afsc,
         variable = 'mean') %>% 
  bind_rows(compareebs_combined %>% 
              pivot_wider(id_cols = c(area_name, year), names_from = schema, values_from = cv, values_fill = 0) %>% 
              mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
                     difference = akfin.gap_products-akfin.afsc,
                     variable = 'cv')) %>% 
  arrange(desc(variable), desc(abs(difference)))
```

Comparison of biomass point estimates, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'mean') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

Comparison of biomass CVs, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'cv') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

##Compare EBS Slope Biomass

### *Original query:*

```{r}
oldebsslope <- dplyr::tbl(akfin, dplyr::sql('afsc.race_biomass_ebsslope')) %>%
  dplyr::rename_all(tolower) %>% 
  dplyr::filter(species_code %in% my_spp_codes & stratum == 999999) %>% 
  dplyr::select(species_code, year, biomass_mt = stratum_biomass, biomass_var = bio_var) %>% 
  dplyr::collect() %>% 
  mutate(area_name = 'EBS slope: All Strata')
```

```{r}
#| echo: false
oldebsslope %>% kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *New query:*
```{r}
newebsslope <- dplyr::tbl(akfin, dplyr::sql('gap_products.akfin_biomass')) %>%
  dplyr::rename_all(tolower) %>% 
  dplyr::select(survey_definition_id, area_id, species_code, year, biomass_mt, biomass_var) %>% 
  dplyr::filter(species_code %in% my_spp_codes & area_id %in% ebs_slope_ids) %>% 
  dplyr::collect() %>% 
  dplyr::left_join(lkup %>% select(survey_definition_id, area_id, area_name))
```

```{r}
#| echo: false
newebsslope %>% kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *Combine data sets by species and with all species combined:*

```{r}
compareebsslope <- newebsslope %>% 
  mutate(schema = "akfin.gap_products") %>% 
  select(schema, area_name, year, species_code, biomass_mt, biomass_var) %>% 
  bind_rows(oldebsslope %>% 
              mutate(schema = "akfin.afsc",
                     species_code = as.numeric(species_code)) %>% 
              select(schema, area_name, year, species_code, biomass_mt, biomass_var)) %>% 
  mutate(cv = ifelse(biomass_mt > 0, sqrt(biomass_var) / biomass_mt, NA))

compareebsslope_combined <- compareebsslope %>% 
  group_by(area_name, schema, year) %>% 
 summarise(biomass_mt = sum(biomass_mt, na.rm = TRUE),
            biomass_var = sum(biomass_var, na.rm = TRUE)) %>% 
  ungroup() %>% 
  mutate(cv = ifelse(biomass_mt > 0, sqrt(biomass_var) / biomass_mt, NA))
```

### *Species-specific comparisons:*

EBS Slope BTS Biomass (+/- 1 SD), red = old data, blue = new data:

```{r,fig.width=14,fig.height=8}
#| echo: false
ggplot(compareebsslope, aes(x = factor(year), y = biomass_mt, fill = schema)) +
  geom_bar(stat = 'identity', position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  geom_errorbar(aes(ymin = biomass_mt - sqrt(biomass_var), ymax = biomass_mt + sqrt(biomass_var)),
                position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  facet_wrap(~species_code, ncol = 2, scale = 'free_y') +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x = NULL)

```

```{r}
#| echo: false
output <- compareebsslope %>% 
  pivot_wider(id_cols = c(area_name, year, species_code), names_from = schema, values_from = biomass_mt, values_fill = 0) %>% 
  mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
         difference = akfin.gap_products-akfin.afsc,
         variable = 'mean') %>% 
  bind_rows(compareebsslope %>% 
              pivot_wider(id_cols = c(area_name, year, species_code), names_from = schema, values_from = cv, values_fill = 0) %>% 
              mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
                     difference = akfin.gap_products-akfin.afsc,
                     variable = 'cv')) %>% 
  arrange(desc(variable), desc(abs(difference))) %>%   left_join(bsai_orox_codes_df %>% select(species_code, common_name)) 
```
Comparison of biomass point estimates, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'mean') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

Comparison of biomass CVs, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'cv') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *Complex-level comparisons:*

EBS Slope BTS Biomass (+/- 1 SD), red = old data, blue = new data:

```{r,fig.width=14,fig.height=5}
#| echo: false
ggplot(compareebsslope_combined, aes(x = factor(year), y = biomass_mt, fill = schema)) +
  geom_bar(stat = 'identity', position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  geom_errorbar(aes(ymin = biomass_mt - sqrt(biomass_var), ymax = biomass_mt + sqrt(biomass_var)),
                position = position_dodge2(width = 0.5, preserve = "single", padding = 0)) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(x = NULL)
```

```{r}
#| echo: false
output <- compareebsslope_combined %>% 
  pivot_wider(id_cols = c(area_name, year), names_from = schema, values_from = biomass_mt, values_fill = 0) %>% 
  mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
         difference = akfin.gap_products-akfin.afsc,
         variable = 'mean') %>% 
  bind_rows(compareebsslope_combined %>% 
              pivot_wider(id_cols = c(area_name, year), names_from = schema, values_from = cv, values_fill = 0) %>% 
              mutate(percent_change = (akfin.gap_products-akfin.afsc)/akfin.afsc * 100,
                     difference = akfin.gap_products-akfin.afsc,
                     variable = 'cv')) %>% 
  arrange(desc(variable), desc(abs(difference)))
```

Comparison of biomass point estimates, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'mean') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

Comparison of biomass CVs, largest differences shown first:

```{r}
#| echo: false
output %>%
  filter(variable == 'cv') %>% 
 kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```
## AI BTS lengths

Due to sample size limitations, length frequency data are only presented for dusky rockfish (30152) and shortspine thornyhead (30020) in the BSAI other rockfish stock assessment. Additionally, length data are only available in the AI BTS and the EBS Slope BTS.

```{r}
my_spp_codes <- c(30152, 30020)
```

### *Old query:*

```{r}
#| output: false
# assessment query pulls length data by depth stratum - not sure this is
# necessary, other than i don't see a subarea option... but sticking to status quo
oldailen <- dplyr::tbl(akfin, dplyr::sql('afsc.race_sizestratumaigoa')) %>%
  dplyr::rename_all(tolower) %>% 
  dplyr::select(survey, year, stratum, species_code, length, population_count = total) %>% 
  dplyr::filter(survey == "AI" & species_code %in% my_spp_codes & year >= 1991) %>% 
  dplyr::left_join(dplyr::tbl(akfin, dplyr::sql('afsc.race_goastrataaigoa')) %>% 
                     dplyr::rename_all(tolower) %>% 
                     dplyr::filter(survey == "AI") %>% 
                     dplyr::distinct(survey, area_id = summary_area, stratum, area_name = inpfc_area)) %>%  
  dplyr::collect()
```

```{r}
#| echo: false
#| output: false
oldailen %>% kableExtra::kable("html") %>% 
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *New query:*

```{r}
#| output: false
newailen <- dplyr::tbl(akfin, dplyr::sql('gap_products.akfin_sizecomp')) %>% 
  dplyr::rename_all(tolower) %>% 
  dplyr::select(survey_definition_id, area_id, species_code, year, length_mm, sex, population_count) %>% 
  dplyr::filter(species_code %in% my_spp_codes & area_id %in% ailen_area_ids & year >= 1991) %>% 
  dplyr::collect() %>% 
  dplyr::left_join(lkup %>% 
                     filter(survey == 'AI') %>% 
                     select(survey_definition_id, area_id, area_name), 
                   by = join_by(survey_definition_id, area_id))
```

```{r}
#| echo: false
#| output: false
newailen %>% kableExtra::kable("html") %>%
  kableExtra::kable_styling() %>% 
  kableExtra::scroll_box(width = "100%", height = "200px")
```

### *Combine data sets by species and with all species combined:*

